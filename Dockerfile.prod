# Dependencies (use npm to install pnpm globally)
FROM node:21-alpine3.19 AS deps
RUN npm install -g pnpm  # Install pnpm globally
WORKDIR /usr/src/app

COPY --chown=node:node pnpm-lock.yaml ./
COPY --chown=node:node package.json ./

RUN pnpm install --frozen-lockfile

# Builder (use pnpm)
FROM node:21-alpine3.19 AS build

RUN npm install -g pnpm  # Install pnpm globally
WORKDIR /usr/src/app

COPY --chown=node:node --from=deps /usr/src/app/node_modules ./node_modules
COPY --chown=node:node --from=deps /usr/src/app/package.json ./package.json
COPY --chown=node:node --from=deps /usr/src/app/pnpm-lock.yaml ./pnpm-lock.yaml
COPY . .


RUN pnpm  build

RUN pnpm prune --prod
# Production image (optimize with pnpm)
FROM node:21-alpine3.19 AS prod

WORKDIR /usr/src/app

# Copia las dependencias y el build de la fase de construcci√≥n
COPY --from=build /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/dist ./dist

ENV NODE_ENV=production


EXPOSE 3000

CMD [ "node", "dist/main.js" ]
